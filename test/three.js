var chai = require("chai");
var THR = require("three");

var nn = [[0,1,0],[-0.3090169943749474,0.9510565162951535,0],[-0.24999999999999994,0.9510565162951535,0.1816356320013402],[-0.09549150281252627,0.9510565162951535,0.2938926261462365],[0.09549150281252627,0.9510565162951535,0.2938926261462365],[0.24999999999999992,0.9510565162951535,0.18163563200134025],[0.3090169943749474,0.9510565162951535,3.784366729417715e-17],[0.24999999999999994,0.9510565162951535,-0.18163563200134017],[0.09549150281252632,0.9510565162951535,-0.2938926261462365],[-0.09549150281252623,0.9510565162951535,-0.2938926261462365],[-0.24999999999999992,0.9510565162951535,-0.18163563200134025],[-0.3090169943749474,0.9510565162951535,-7.56873345883543e-17],[-0.5877852522924731,0.8090169943749473,0],[-0.47552825814757677,0.8090169943749473,0.3454915028125263],[-0.1816356320013402,0.8090169943749473,0.5590169943749475],[0.1816356320013402,0.8090169943749473,0.5590169943749475],[0.47552825814757665,0.8090169943749473,0.3454915028125264],[0.5877852522924731,0.8090169943749473,7.198293276126593e-17],[0.47552825814757677,0.8090169943749473,-0.3454915028125262],[0.1816356320013403,0.8090169943749473,-0.5590169943749473],[-0.18163563200134014,0.8090169943749473,-0.5590169943749475],[-0.47552825814757665,0.8090169943749473,-0.3454915028125264],[-0.5877852522924731,0.8090169943749473,-1.4396586552253185e-16],[-0.8090169943749473,0.5877852522924731,0],[-0.6545084971874736,0.5877852522924731,0.47552825814757677],[-0.24999999999999994,0.5877852522924731,0.7694208842938133],[0.24999999999999994,0.5877852522924731,0.7694208842938133],[0.6545084971874735,0.5877852522924731,0.4755282581475768],[0.8090169943749473,0.5877852522924731,9.907600723509855e-17],[0.6545084971874736,0.5877852522924731,-0.47552825814757665],[0.2500000000000001,0.5877852522924731,-0.7694208842938132],[-0.24999999999999986,0.5877852522924731,-0.7694208842938133],[-0.6545084971874735,0.5877852522924731,-0.4755282581475768],[-0.8090169943749473,0.5877852522924731,-1.981520144701971e-16],[-0.9510565162951535,0.3090169943749474,0],[-0.7694208842938133,0.3090169943749474,0.5590169943749475],[-0.2938926261462365,0.3090169943749474,0.9045084971874736],[0.2938926261462365,0.3090169943749474,0.9045084971874736],[0.7694208842938132,0.3090169943749474,0.5590169943749476],[0.9510565162951535,0.3090169943749474,1.1647083181762659e-16],[0.7694208842938133,0.3090169943749474,-0.5590169943749473],[0.2938926261462367,0.3090169943749474,-0.9045084971874735],[-0.2938926261462364,0.3090169943749474,-0.9045084971874736],[-0.7694208842938132,0.3090169943749474,-0.5590169943749476],[-0.9510565162951535,0.3090169943749474,-2.3294166363525317e-16],[-1,0,0],[-0.8090169943749473,0,0.5877852522924731],[-0.3090169943749474,0,0.9510565162951535],[0.3090169943749474,0,0.9510565162951535],[0.8090169943749472,0,0.5877852522924732],[1,0,1.224646798818428e-16],[0.8090169943749473,0,-0.587785252292473],[0.30901699437494756,0,-0.9510565162951534],[-0.3090169943749473,0,-0.9510565162951535],[-0.8090169943749472,0,-0.5877852522924732],[-1,0,-2.449293597636856e-16]];

var _getRotationMatrix = function(normal){
    // rotation relative to z axis;
    var n = new THR.Vector3().fromArray(normal);
    n.normalize();
    var Z = new THR.Vector3(0,0,-1);
    var axis = Z.clone().cross(n.clone() ) ;

    axis.normalize();
    var angl = Math.acos(Z.dot(n));
    var m = new THR.Matrix4();



    m.makeRotationAxis(axis, angl);
    return m.clone();
}


var _getRotationMatrixN = function(A, angl){

    var axis = new  THR.Vector3().fromArray(A) ;


    var m = new THR.Matrix4();

    m.makeRotationAxis(axis, angl);
    return m.clone();
}

var randomVector= function(L){

    var x = Math.random() * L - L/2;
    var y = Math.random() * L - L/2;
    var z = Math.random() * L - L/2;

    return new THR.Vector3(x,y,z);

}

describe("THREE ", function() {
    var users;
    it("Rot matrix", function () {
        var v1 = randomVector(50);
        var v2 = randomVector(150);

        var d = v2.clone().sub(v1.clone());
        var L1 = d.length();

        var L = nn.length;
        var da = Math.PI / L;
        nn.forEach(function(n,i){

            var m = _getRotationMatrix(n); // N([1,0,0], i * da);
            var q = new THR.Quaternion();
            var vv1 = v1.clone();
            var vv2 = v2.clone();
            q.setFromRotationMatrix(m);
            vv1.applyMatrix4(m.clone());
            vv2.applyMatrix4(m.clone());
            var d = vv2.clone().sub(vv1.clone());
            var dx = vv2.x - vv1.x;
            var dy = vv2.y - vv1.y;
            var dz = vv2.z - vv1.z;
            var Ln = d.length();


            chai.expect(Math.abs(Ln - L1 ) ).to.be.below(0.01);

        })


    })
})